name: 'Deploy Node app to AWS VM (EC2)'
description: 'Deploy NodeJS App to an AWS VM (EC2)'
branding:
  icon: upload-cloud
  color: red
inputs:
  checkout:
    description: 'Specifies if this action should checkout the code'
    required: false
    default: 'true'
  aws_access_key_id:
    description: 'AWS access key ID'
    required: true
  aws_secret_access_key:
    description: 'AWS secret access key'
    required: true
  aws_session_token:
    description: 'AWS session token'
    required: false
  aws_default_region:
    description: 'AWS default region'
    required: true
    default: 'us-east-1'
  tf_state_bucket:
    description: 'AWS S3 bucket to use for Terraform state. Defaults to `${org}-${repo}-tf-state'
    required: false
  dot_env:
    description: '`.env` file to be used with the app'
    required: false
  app_port:
    description: 'Port to expose for the app'
    default: "80"
    required: false
  ec2_instance_profile:
    description: 'The AWS IAM instance profile to use for the EC2 instance'
outputs:
  vm_url:
    description: "The URL of the generated app"
    value: ${{ steps.deploy.outputs.vm_url }}

runs:
  using: 'composite'
  steps:
    - name: Checkout if required
      if: ${{ inputs.checkout == 'true' }}
      uses: actions/checkout@v3

    - name: Deploy with BitOps
      shell: bash
      env:
        BITOPS_ENVIRONMENT: deployment
        AWS_ACCESS_KEY_ID: ${{ inputs.aws_access_key_id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws_secret_access_key }}
        AWS_SESSION_TOKEN: ${{ inputs.aws_session_token }}
        AWS_DEFAULT_REGION: ${{ inputs.aws_default_region }}
        TF_STATE_BUCKET: ${{ inputs.tf_state_bucket }}
        DOT_ENV: ${{ inputs.dot_env }}
        APP_PORT: ${{ inputs.app_port }}
        GITHUB_ACTION_PATH: ${{ github.action_path }}
        EC2_INSTANCE_PROFILE: ${{ github.ec2_instance_profile }}
      run: |
        echo "running operations/_scripts/deploy/deploy.sh"
        $GITHUB_ACTION_PATH/operations/_scripts/deploy/deploy.sh