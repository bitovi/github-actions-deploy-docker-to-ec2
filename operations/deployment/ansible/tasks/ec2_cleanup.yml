- name: Generate timestamp
  set_fact:
    timestamp: "{{ ansible_date_time.date | regex_replace('[^0-9]','') }}-{{ ansible_date_time.hour }}{{ ansible_date_time.minute }}"

- name: Check if folder exists
  stat:
    path: "{{ app_install_root }}/{{ app_repo_name }}"
  register: folder_stat

- name: Stop Docker
  docker_compose:
    project_src: "{{ app_install_root }}/{{ app_repo_name }}"
    state: present
    stopped: true
  when: folder_stat.stat.exists

- name: Find the NFS volume in fstab
  shell: "grep 'nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=612,retrans=2,noresvport' /etc/fstab | awk '{print $2}'"
  register: nfs_mount_path
  changed_when: false
  failed_when: false
  when: folder_stat.stat.exists

- name: Check if mounted
  shell: "mount | grep {{ nfs_mount_path.stdout }}"
  register: volume_mounted
  changed_when: false
  failed_when: false
  when: folder_stat.stat.exists and nfs_mount_path.stdout != ""

- name: Unmount the NFS volume
  shell: "timeout 5 umount {{ nfs_mount_path.stdout }} || timeout 5 umount -f {{ nfs_mount_path.stdout }} || timeout 5 umount -fl {{ nfs_mount_path.stdout }}"
  ignore_errors: true
  when: folder_stat.stat.exists and nfs_mount_path.stdout != "" and volume_mounted.stdout != ""

- name: Deletes efs mount directory
  file:
    path: "{{ nfs_mount_path.stdout }}"
    state: absent
  when: folder_stat.stat.exists

- name: Compress folder without mounted EFS
  archive:
    path: "{{ app_install_root }}/{{ app_repo_name }}"
    dest: "{{ app_install_root }}/{{ app_repo_name }}-{{ timestamp }}.tar.gz"
    format: gz
    force_archive: true
    remove: true
  when: folder_stat.stat.exists