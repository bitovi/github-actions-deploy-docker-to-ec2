# UnMount EFS

# Reason for usage
#   There is no reliable way to know when an unmount is necessary
#   if you’ve ran a deployment which created an EC2 and an EFS and you’ve mounted the EFS and you then wanted to delete the EFS, how would you tell Ansible that unmounting is needed?
#   Terraform is unaware of potential state changes and therefor there is no reliable way to know if an unmount is neccessary from a passed toggle. 
#
#   Unmounting every time ensures that if an EFS is destroyed, the mount is removed with it. 

#- name: Check if efs mount directory is present
#  stat:
#    path: "{{ app_install_root }}/{{ app_repo_name }}/{{ application_mount_target }}/"
#  register: check_efs_mount
#
#- name: Stat test
#  debug:
#    msg: "The file or directory exists"
#  when: check_efs_mount.stat.exists
#
#- name: Unmount efs volume
#  ansible.posix.mount:
#    path: "{{ app_install_root }}/{{ app_repo_name }}/{{ application_mount_target }}"
#    state: unmounted
#  when: check_efs_mount.stat.exists
#

- name: Check if HOST variable is defined
  shell: "grep '^HOST_DIR=' {{ app_install_root }}/{{ app_repo_name }}/.env"
  register: host_variable
  changed_when: false
  failed_when: false

- name: Find the NFS volume in fstab
  shell: "grep 'nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=612,retrans=2,noresvport' /etc/fstab | awk '{print $2}'"
  register: nfs_mount_path
  changed_when: false
  failed_when: false
  when: host_variable.stdout == ""

- name: Check if mounted
  shell: "mount | grep {{ nfs_mount_path.stdout }}"
  register: volume_mounted
  changed_when: false
  failed_when: false
  when: host_variable.stdout == "" and nfs_mount_path.stdout != ""

- name: Unmount the NFS volume
  shell: "timeout 5 umount {{ nfs_mount_path.stdout }} || timeout 5 umount -f {{ nfs_mount_path.stdout }} || timeout 5 umount -fl {{ nfs_mount_path.stdout }}"
  ignore_errors: true
  when: host_variable.stdout == "" and nfs_mount_path.stdout != "" and volume_mounted.stdout != ""

- name: Deletes efs mount directory
  file:
    path: "{{ nfs_mount_path.stdout }}"
    state: absent
  when: host_variable.stdout == ""

- name: Remove entry from /etc/fstab
  lineinfile:
    path: /etc/fstab
    search_string: 'nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=612,retrans=2,noresvport'
    state: absent
  become: true
  when: host_variable.stdout == "" and nfs_mount_path.stdout != ""
